clc,clear
tic  %计时开始
%% 初始量赋值（目标函数、约束条件单独写到m文件中）
n=4;    %自变量个数
a0=0.1; %试验步长
epsilon=1e-6;   %收敛精度
k=8;    %随机搜索方向个数
a=0;   %自变量下限值
b=42;    %自变量上限值
%%

%% 选择初始点
while 1
    %x0=[11,11,23,3]';
    x0=a+(b-a)*rand(n,1);  %产生一个随机初始点，由约束1得自变量取值区间为（-3，3）
    g=gcon(x0);   %计算产生的随机点约束函数值
    if all(g>=0)
        break;
    end
end
% x0=[18,4,14,7]';
% f0=fun(x0);  %计算初始随机可行点函数值
% g=gcon(x0);   %计算产生的随机点约束函数值
% disp(x0);  %调试是否生成初始可行点x0
% disp(f0);  %调试是否生成初始可行点x0
% disp(g);
%%

while 1
    %% 产生可行搜索方向
    a0=0.1;
    r=zeros(n,k);   %存放k个随机方向
    e=zeros(n,k);   %存放k个单位化随机方向
    while 1
        j=1;    %用来记录沿随机方向移动后可行点数目的计数变量
        for i=1:k
          r(:,i)=rands(n,1);    %产生一个坐标（-1，1）之间的随机方向
          e(:,i)=r(:,i)/norm(r(:,i));   %单位化随机方向
          xs=x0+a0*e(:,i);  %计算沿随机方向移动后的自变量点
          gz=gcon(xs);          
          if all(gz>=0)   
            fs=fun(xs); %计算移动后可行点的目标函数值
            x(:,j)=xs;  %记录沿随机方向移动后的可行点
            fz(:,j)=fs; %记录沿随机方向移动后的可行点目标函数值
            j=j+1;             
          else
             continue;
          end
        end
        xf=[x;fz];  %xf为三行矩阵，前两行代表移动后可行点，第三行代表移动后可行点的目标函数值
        [B,ind]=sort(xf(n+1,:));    %升序排列移动后可行点的目标函数值
        fl=B(1);    %获取最小的移动后可行点的目标函数值
        if fl<f0
            break;
        else
            a0=0.9*a0;  %若的所有可行点目标函数值都大于初始值f0,则缩小步长，重新生成随机方向试探
        end
    end
    xl=x(:,ind(1)); %找到沿随机方向移动后目标函数值最小且小于f0的可行点
    d=xl-x0;    %找到一个可行搜索方向
    % xl,fl,f0,d  %调试是否找到一个可行方向
    f0=fl;  %将初始点移动到试探可行点
    x0=xl;
    %%
    
    %% 沿可行方向采用加速步长进行搜索
    while 1
        a0=1.3*a0;  %步长加速
        xl=x0+a0*d; %计算沿可行方向移动到的下一点
        fl=fun(xl); %计算移动后的目标函数值
        g=gcon(xl); %计算移动后的约束函数值
        if(all(g>=0) && fl<f0)
            x0=xl;  %若移动的点满足约束条件且函数值下降，则将x0点移动到xl
            f0=fl;
        else
            break;
        end        
    end
    xn=x0-a0*d/1.3; %计算满足约束条件且函数值下降的极限点x0的前一点xn
    fl=fun(xn);     %计算满足约束条件且函数值下降的极限点x0的前一点xn的函数值，以计算收敛条件
    % xn,fl
    % x0,f0 %调试沿可行方向加速搜索后的可行点
    %%
    
    if abs((f0-fl)/f0)<epsilon  %判断是否达到收敛精度
        break;
    end
end
xe=x0;
fe=f0;
xe,fe  %输出最优点坐标及函数值
toc  %计时结束
